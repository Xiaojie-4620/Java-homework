 内部类

 例如车内有引擎
 class car{
    class Engine{
    }
 }
 ---
 内部类的访问特点:
 - 内部类可以直接访问外部类的成员, 包括私有
 - 外部类要访问内部类的成员, 必须创建对象


--- 成员内部类
    写在成员位置，属于外部类的成员（例如上面的车内有引擎）
    创建对象：
    1.在外部类中编写方法，对外提供内部类的对象
    2.直接创建：外部类名.内部类名 对象名 =  外部类对象.内部类对象;
    例如: Car.Engine en = new Car().new Engine();
    -----------------------------------------------
    成员内部类获取外部类的成员变量：


--- 静态内部类
    静态内部类只能访问外部类中静态变量和静态方法，如果要访问非静态的则需要创建对象

    public class Outer {
        private int a = 10;
        static class Inner{
            private int a = 20;
            public void show(){
                System.out.println(this.a);
            }
        }
    }
    // 创建内部类对象
    Outer.Inner i = new Outer.Inner();

    调用静态内部类的方法：
    如果方法为  非静态方法 使用 类名.方法
              静态方法 使用 外部类.内部类.方法

--- 局部内部类 （写在方法里面的内部类
public void show(){
    //局部内部类
    class Inner{

    }
}
    类似于方法里的局部变量
    外界无法直接使用局部类，需要在方法内创建对象并使用
    该类可以直接访问外部类的成员，也可以访问方法内的局部变量

--- 匿名内部类 （隐藏了名字的内部类
    格式：
        new 类名/接口名(){
            重写方法;
        };

